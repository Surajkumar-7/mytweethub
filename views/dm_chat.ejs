<!DOCTYPE html>
<html>

<head>
  <title>Chat with <%= recipient.username %>
  </title>
  <script src="/socket.io/socket.io.js"></script>

  <style>
    * {
      box-sizing: border-box;
    }

    body {
      margin: 0;
      font-family: 'Segoe UI', sans-serif;
      background-color: #333446;
      height: 100vh;
      display: flex;
    }

    .chat-container {
      display: flex;
      width: 100%;
    }

    .sidebar {
      width: 250px;
      background-color: #333446;
      border-right: 1px solid #000;
      padding: 20px;
    }

    .sidebar h2 {
      font-size: 18px;
      color: #ffff;
    }

    .sidebar p {
      margin: 10px 0;
      font-weight: bold;
    }

    .sidebar a {
      display: inline-block;
      margin-top: 20px;
      text-decoration: none;
      color: #ffff;
      font-size: 14px;
    }

    .chat-box {
      flex-grow: 1;
      display: flex;
      flex-direction: column;
      background: #7F8CAA;
    }

    .messages {
      flex-grow: 1;
      padding: 20px;
      overflow-y: auto;
    }

    .message {
      margin-bottom: 15px;
      max-width: 60%;
      padding: 10px 15px;
      border-radius: 20px;
      background-color: #ffffff;
      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
      position: relative;
    }

    .message.from-me {
      margin-left: auto;
      background-color: #333446;
      color: white;
    }

    .message.from-them {
      margin-right: auto;
      background-color: #ffffff;
      color: #333;
    }

    .message-time {
      font-size: 10px;
      color: #777;
      margin-top: 4px;
      text-align: right;
    }

    .chat-input {
      display: flex;
      padding: 15px;
      background-color: #7F8CAA;
      border-top: 1px solid #7F8CAA;
    }

    .chat-input input {
      flex-grow: 1;
      padding: 10px 15px;
      border-radius: 20px;
      border: 1px solid #ffff;
      font-size: 14px;
      outline: none;
    }

    .chat-input button {
      background-color: #333446;
      border: none;
      color: white;
      padding: 10px 20px;
      margin-left: 10px;
      border-radius: 20px;
      font-size: 14px;
      cursor: pointer;
    }

    .chat-input button:hover {
      background-color: #B8CFCE;
    }

    p {
      color: #ffff;
    }
  </style>
</head>

<body>
  <p id="typingStatus" style="font-size: 13px; color: #ccc; margin-left: 10px;"></p>

  <div class="chat-container">
    <div class="sidebar">
      <h2>Chat</h2>
      <p>
        <%= recipient.username %>
      </p>
      <a href="/dm">‚Üê Back to DM list</a>
    </div>

    <div class="chat-box">
      <p id="typingStatus" style="font-size: 13px; color: #ccc; margin-left: 15px;"></p>
      <div class="messages">
        <% messages.forEach(m=> { %>
          <div class="message <%= m.sender_id === currentUserId ? 'from-me' : 'from-them' %>">
            <div>
              <%= m.message %>
            </div>
            <div class="message-time">
              <%= new Date(m.time).toLocaleTimeString() %>
            </div>
          </div>
          <% }) %>
      </div>

      <form class="chat-input" action="/dm/<%= recipient.id %>" method="POST">
        <input type="text" id="messageInput" name="message" placeholder="Type a message..." required />
        <button type="submit">Send</button>
      </form>
    </div>
  </div>


  <script src="/socket.io/socket.io.js"></script>
  <script>
    const socket = io();
    const msgInput = document.getElementById("messageInput");
    const typingStatus = document.getElementById("typingStatus"); // Add this span in HTML

    const sender = "<%= currentUser.username %>";
    const receiver = "<%= recipient.username %>";


    let typingTimer;

    msgInput.addEventListener("input", () => {
      socket.emit("typing", { sender, receiver });

      clearTimeout(typingTimer);
      typingTimer = setTimeout(() => {
        socket.emit("stopTyping", { sender, receiver });
      }, 1000);
    });

    socket.on("showTyping", ({ sender: s, receiver: r }) => {
      if (r === "<%= currentUser.username %>") {
        typingStatus.textContent = s + " is typing...";
      }
    });

    socket.on("hideTyping", ({ sender: s, receiver: r }) => {
      if (r === "<%= currentUser.username %>") {
        typingStatus.textContent = "";
      }
    });

    
  </script>

</body>

</html>